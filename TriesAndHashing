Trie:

A trie also called digital tree or prefix tree is a kind of search tree - an ordered tree data structure.

It is used to store a dynamic set or associative array where the key are usually strings.

It is a tree that stores strings. Maximum number of children of a node is equal to size of alphabet. Trie supports search, insert and delete operations in O(L) time where L is length of key.

Hashing: 

In hashing, we can convert key to a small value is used to index data. Hashing supports search, insert and delete operations in O(L) time average.

Advantages of Trie:

1. It is faster than hashing because of the way it is implemented. We do not need to compute any hash function. No collision handling is required.

2. We can easily print all words in alphabetical order which is not easily possible with hashing.

3. We can efficiently do prefix search with trie.

Disadvantages of Trie:

1. A lot of memory required for storing the strings. Because of each node have too many node pointers.